{"version":3,"sources":["../../src/magento-layout-loader/validateConfig.js"],"names":["Ajv","require","ajv","module","exports","config","rules","Object","values","rule","validator","validatorsByOperation","operation","errors","length","passed","error","formatError","message","JSON","stringify","removeContainer","compile","additionalProperties","required","properties","constant","targetContainer","type","removeChild","targetChild","insertBefore","componentPath","insertAfter"],"mappings":";;AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;;AAEA,MAAMC,MAAM,IAAIF,GAAJ,EAAZ;;AAEA;;;;;;;;AAQAG,OAAOC,OAAP,GAAiBC,UAAU;AACvB,SAAK,MAAMC,KAAX,IAAoBC,OAAOC,MAAP,CAAcH,MAAd,CAApB,EAA2C;AACvC,aAAK,MAAMI,IAAX,IAAmBH,KAAnB,EAA0B;AACtB,kBAAMI,YAAYC,sBAAsBF,KAAKG,SAA3B,CAAlB;AACAF,sBAAUD,IAAV;AACA,gBAAIC,UAAUG,MAAV,IAAoBH,UAAUG,MAAV,CAAiBC,MAAzC,EAAiD;AAC7C,uBAAO;AACHC,4BAAQ,KADL;AAEHC,2BAAOC,YAAYP,UAAUG,MAAV,CAAiB,CAAjB,CAAZ,EAAiCJ,IAAjC;AAFJ,iBAAP;AAIH;AACJ;AACJ;;AAED,WAAO,EAAEM,QAAQ,IAAV,EAAgBC,OAAO,IAAvB,EAAP;AACH,CAfD;;AAiBA,SAASC,WAAT,CAAqBD,KAArB,EAA4BP,IAA5B,EAAkC;AAC9B,UAAM,EAAES,OAAF,KAAcF,KAApB;AACA,WACK,+EAAD,GACC,YAAWE,OAAQ,IADpB,GAEC,aAAYC,KAAKC,SAAL,CAAeX,IAAf,CAAqB,EAHtC;AAKH;;AAED,MAAME,wBAAwB;AAC1BU,qBAAiBnB,IAAIoB,OAAJ,CAAY;AACzBC,8BAAsB,KADG;AAEzBC,kBAAU,CAAC,WAAD,EAAc,iBAAd,CAFe;AAGzBC,oBAAY;AACRb,uBAAW,EAAEc,UAAU,iBAAZ,EADH;AAERC,6BAAiB,EAAEC,MAAM,QAAR;AAFT;AAHa,KAAZ,CADS;;AAU1BC,iBAAa3B,IAAIoB,OAAJ,CAAY;AACrBC,8BAAsB,KADD;AAErBC,kBAAU,CAAC,WAAD,EAAc,iBAAd,EAAiC,aAAjC,CAFW;AAGrBC,oBAAY;AACRb,uBAAW,EAAEc,UAAU,aAAZ,EADH;AAERC,6BAAiB,EAAEC,MAAM,QAAR,EAFT;AAGRE,yBAAa,EAAEF,MAAM,QAAR;AAHL;AAHS,KAAZ,CAVa;;AAoB1BG,kBAAc7B,IAAIoB,OAAJ,CAAY;AACtBC,8BAAsB,KADA;AAEtBC,kBAAU,CACN,WADM,EAEN,iBAFM,EAGN,aAHM,EAIN,eAJM,CAFY;AAQtBC,oBAAY;AACRb,uBAAW,EAAEc,UAAU,cAAZ,EADH;AAERC,6BAAiB,EAAEC,MAAM,QAAR,EAFT;AAGRE,yBAAa,EAAEF,MAAM,QAAR,EAHL;AAIRI,2BAAe,EAAEJ,MAAM,QAAR;AAJP;AARU,KAAZ,CApBY;;AAoC1BK,iBAAa/B,IAAIoB,OAAJ,CAAY;AACrBC,8BAAsB,KADD;AAErBC,kBAAU,CACN,WADM,EAEN,iBAFM,EAGN,aAHM,EAIN,eAJM,CAFW;AAQrBC,oBAAY;AACRb,uBAAW,EAAEc,UAAU,aAAZ,EADH;AAERC,6BAAiB,EAAEC,MAAM,QAAR,EAFT;AAGRE,yBAAa,EAAEF,MAAM,QAAR,EAHL;AAIRI,2BAAe,EAAEJ,MAAM,QAAR;AAJP;AARS,KAAZ;AApCa,CAA9B","file":"validateConfig.js","sourcesContent":["const Ajv = require('ajv');\n\nconst ajv = new Ajv();\n\n/**\n * Given an aggregate configuration for all layout operations\n * (generated by the Magento store), validates each config conforms\n * to babel-plugin-magento-layout's requirements\n *\n * @param {object} config\n * @returns {{ passed: bool, error: string | null }}\n */\nmodule.exports = config => {\n    for (const rules of Object.values(config)) {\n        for (const rule of rules) {\n            const validator = validatorsByOperation[rule.operation];\n            validator(rule);\n            if (validator.errors && validator.errors.length) {\n                return {\n                    passed: false,\n                    error: formatError(validator.errors[0], rule)\n                };\n            }\n        }\n    }\n\n    return { passed: true, error: null };\n};\n\nfunction formatError(error, rule) {\n    const { message } = error;\n    return (\n        `Encountered a layout configuration that does not match the required schema.\\n` +\n        `Message: ${message}\\n` +\n        `Received: ${JSON.stringify(rule)}`\n    );\n}\n\nconst validatorsByOperation = {\n    removeContainer: ajv.compile({\n        additionalProperties: false,\n        required: ['operation', 'targetContainer'],\n        properties: {\n            operation: { constant: 'removeContainer' },\n            targetContainer: { type: 'string' }\n        }\n    }),\n\n    removeChild: ajv.compile({\n        additionalProperties: false,\n        required: ['operation', 'targetContainer', 'targetChild'],\n        properties: {\n            operation: { constant: 'removeChild' },\n            targetContainer: { type: 'string' },\n            targetChild: { type: 'string' }\n        }\n    }),\n\n    insertBefore: ajv.compile({\n        additionalProperties: false,\n        required: [\n            'operation',\n            'targetContainer',\n            'targetChild',\n            'componentPath'\n        ],\n        properties: {\n            operation: { constant: 'insertBefore' },\n            targetContainer: { type: 'string' },\n            targetChild: { type: 'string' },\n            componentPath: { type: 'string' }\n        }\n    }),\n\n    insertAfter: ajv.compile({\n        additionalProperties: false,\n        required: [\n            'operation',\n            'targetContainer',\n            'targetChild',\n            'componentPath'\n        ],\n        properties: {\n            operation: { constant: 'insertAfter' },\n            targetContainer: { type: 'string' },\n            targetChild: { type: 'string' },\n            componentPath: { type: 'string' }\n        }\n    })\n};\n"]}