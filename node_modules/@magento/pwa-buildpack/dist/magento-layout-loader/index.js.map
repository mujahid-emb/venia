{"version":3,"sources":["../../src/magento-layout-loader/index.js"],"names":["babelLoader","require","babelPlugin","dynamicImportSyntax","module","exports","magentoLayoutLoader","args","loaderConfig","query","babelPluginConfig","Object","assign","onWarning","warning","err","Error","_module","warnings","push","onError","error","errors","babelrc","plugins","shadowThis","create","value","apply"],"mappings":";;AAAA,MAAMA,cAAcC,QAAQ,cAAR,CAApB;AACA,MAAMC,cAAcD,QAAQ,+BAAR,CAApB;AACA,MAAME,sBAAsBF,QAAQ,oCAAR,CAA5B;;AAEA;;;;AAIAG,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6B,GAAGC,IAAhC,EAAsC;AACnD;AACA,UAAMC,eAAe,KAAKC,KAAL,IAAc,EAAnC;;AAEA,UAAMC,oBAAoBC,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,YAAlB,EAAgC;AACtDK,mBAAWC,WAAW;AAClB,kBAAMC,MAAM,IAAIC,KAAJ,CAAW,0BAAyBF,OAAQ,EAA5C,CAAZ;AACA,iBAAKG,OAAL,CAAaC,QAAb,CAAsBC,IAAtB,CAA2BJ,GAA3B;AACH,SAJqD;AAKtDK,iBAASC,SAAS;AACd,kBAAMN,MAAM,IAAIC,KAAJ,CAAW,0BAAyBK,KAAM,EAA1C,CAAZ;AACA,iBAAKJ,OAAL,CAAaK,MAAb,CAAoBH,IAApB,CAAyBJ,GAAzB;AACH;AARqD,KAAhC,CAA1B;;AAWA;AACA;AACA,UAAMN,QAAQ;AACVc,iBAAS,KADC;AAEVC,iBAAS,CAACrB,mBAAD,EAAsB,CAACD,WAAD,EAAcQ,iBAAd,CAAtB;AAFC,KAAd;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMe,aAAad,OAAOe,MAAP,CAAc,IAAd,EAAoB;AACnCjB,eAAO,EAAEkB,OAAOlB,KAAT;AAD4B,KAApB,CAAnB;;AAIA,WAAOT,YAAY4B,KAAZ,CAAkBH,UAAlB,EAA8BlB,IAA9B,CAAP;AACH,CAjCD","file":"index.js","sourcesContent":["const babelLoader = require('babel-loader');\nconst babelPlugin = require('./babel-plugin-magento-layout');\nconst dynamicImportSyntax = require('babel-plugin-syntax-dynamic-import');\n\n/**\n * The Magento Layout Loader is a small wrapper around\n * babel-loader and a babel plugin.\n */\nmodule.exports = function magentoLayoutLoader(...args) {\n    // Don't bother supporting string-based queries until we need to\n    const loaderConfig = this.query || {};\n\n    const babelPluginConfig = Object.assign({}, loaderConfig, {\n        onWarning: warning => {\n            const err = new Error(`magento-layout-loader: ${warning}`);\n            this._module.warnings.push(err);\n        },\n        onError: error => {\n            const err = new Error(`magento-layout-loader: ${error}`);\n            this._module.errors.push(err);\n        }\n    });\n\n    // Options we want to pass through to the babel-loader\n    // we are wrapping\n    const query = {\n        babelrc: false,\n        plugins: [dynamicImportSyntax, [babelPlugin, babelPluginConfig]]\n    };\n\n    // Yuck. babel-loader reads options from the webpack loader's\n    // `this.query` property (through loader-utils). We need to set this property\n    // to pass through options, but webpack has a `getter` without a `setter`\n    // so we can't just mutate `this.query`. Instead of the mutation,\n    // we create a new object with the proto pointed at the current `this`,\n    // and just shadow the `query` prop\n    const shadowThis = Object.create(this, {\n        query: { value: query }\n    });\n\n    return babelLoader.apply(shadowThis, args);\n};\n"]}