{"version":3,"sources":["../../../src/WebpackTools/middlewares/OriginSubstitution.js"],"names":["debug","require","makeFileLogger","__filename","url","harmon","through","removeTrailingSlash","x","replace","module","exports","createOriginSubstitutionMiddleware","oldDomain","newDomain","oldOrigin","format","newOrigin","attributesToReplaceOrigin","map","attr","query","func","node","setAttribute","getAttribute","split","join","tagsToReplaceOrigin","stream","createStream","pipe","buf","queue","toString","allTransforms"],"mappings":";;AAAA;;;;;;;;;;;;;;AAcA,MAAMA,QAAQC,QAAQ,kBAAR,EAA4BC,cAA5B,CAA2CC,UAA3C,CAAd;AACA,MAAMC,MAAMH,QAAQ,KAAR,CAAZ;AACA,MAAMI,SAASJ,QAAQ,QAAR,CAAf;AACA,MAAMK,UAAUL,QAAQ,SAAR,CAAhB;AACA,MAAMM,sBAAsBC,KAAKA,EAAEC,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAjC;AACAC,OAAOC,OAAP,GAAiB,SAASC,kCAAT,CACbC,SADa,EAEbC,SAFa,EAGf;AACE,UAAMC,YAAYR,oBAAoBH,IAAIY,MAAJ,CAAWH,SAAX,CAApB,CAAlB;AACA,UAAMI,YAAYV,oBAAoBH,IAAIY,MAAJ,CAAWF,SAAX,CAApB,CAAlB;AACA,UAAMI,4BAA4B,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyBC,GAAzB,CAA6BC,SAAS;AACpEC,eAAQ,IAAGD,IAAK,MAAKL,SAAU,IADqC;AAEpEO,aAAKC,IAAL,EAAW;AACPA,iBAAKC,YAAL,CACIJ,IADJ,EAEIG,KACKE,YADL,CACkBL,IADlB,EAEKM,KAFL,CAEWX,SAFX,EAGKY,IAHL,CAGUV,SAHV,CAFJ;AAOH;AAVmE,KAAT,CAA7B,CAAlC;AAYA,UAAMW,sBAAsB,CAAC,OAAD,EAAUT,GAAV,CAAcC,SAAS;AAC/CC,eAAOD,IADwC;AAE/CE,aAAKC,IAAL,EAAW;AACPvB,kBAAM,KAAN,EAAaoB,IAAb,EAAmBG,IAAnB;AACA,kBAAMM,SAASN,KAAKO,YAAL,EAAf;AACAD,mBACKE,IADL,CAEQzB,QAAQ,UAAS0B,GAAT,EAAc;AAClB,qBAAKC,KAAL,CACID,IACKE,QADL,GAEKR,KAFL,CAEWX,SAFX,EAGKY,IAHL,CAGUV,SAHV,CADJ;AAMH,aAPD,CAFR,EAWKc,IAXL,CAWUF,MAXV;AAYH;AAjB8C,KAAT,CAAd,CAA5B;AAmBA7B,UACK,WAAUe,SAAU,SAAQE,SAAU,UAD3C,EAEIC,yBAFJ;AAIA,UAAMiB,gBAAgB,CAClB,GAAGP,mBADe,EAElB,GAAGV,yBAFe,CAAtB;AAIA,WAAOb,OAAO,EAAP,EAAW8B,aAAX,EAA0B,IAA1B,CAAP;AACH,CA9CD","file":"OriginSubstitution.js","sourcesContent":["/**\n * Replace all instances of one URL base in an HTML response, with another.\n * Useful for proxying to systems like Magento, which often generate absolute\n * URLs in their render output.\n *\n * Rather than configure Magento to use the your temporary dev server URL as\n * its configured base domain, this middleware allows the dev server to text\n * replace any links, resources, or reference URLs on the fly.\n *\n * For Magento 2 specifically, This is a stopgap until we can hack Framework to\n * have branch logic in asset URL resolvers.\n *\n * EXPERIMENTAL -- not ready for prime time\n */\nconst debug = require('../../util/debug').makeFileLogger(__filename);\nconst url = require('url');\nconst harmon = require('harmon');\nconst through = require('through');\nconst removeTrailingSlash = x => x.replace(/\\/$/, '');\nmodule.exports = function createOriginSubstitutionMiddleware(\n    oldDomain,\n    newDomain\n) {\n    const oldOrigin = removeTrailingSlash(url.format(oldDomain));\n    const newOrigin = removeTrailingSlash(url.format(newDomain));\n    const attributesToReplaceOrigin = ['href', 'src', 'style'].map(attr => ({\n        query: `[${attr}*=\"${oldOrigin}\"]`,\n        func(node) {\n            node.setAttribute(\n                attr,\n                node\n                    .getAttribute(attr)\n                    .split(oldOrigin)\n                    .join(newOrigin)\n            );\n        }\n    }));\n    const tagsToReplaceOrigin = ['style'].map(attr => ({\n        query: attr,\n        func(node) {\n            debug('tag', attr, node);\n            const stream = node.createStream();\n            stream\n                .pipe(\n                    through(function(buf) {\n                        this.queue(\n                            buf\n                                .toString()\n                                .split(oldOrigin)\n                                .join(newOrigin)\n                        );\n                    })\n                )\n                .pipe(stream);\n        }\n    }));\n    debug(\n        `replace ${oldOrigin} with ${newOrigin} in html`,\n        attributesToReplaceOrigin\n    );\n    const allTransforms = [\n        ...tagsToReplaceOrigin,\n        ...attributesToReplaceOrigin\n    ];\n    return harmon([], allTransforms, true);\n};\n"]}