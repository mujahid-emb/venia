{"version":3,"sources":["../../../../src/WebpackTools/plugins/MagentoRootComponentsPlugin/roots-chunk-loader.js"],"names":["EOL","require","join","sep","dirname","promisify","pify","directiveParser","module","exports","rootComponentsChunkLoader","src","cb","async","readFile","fs","bind","rootsDirs","query","readdir","dirEntries","flatten","Promise","all","map","dir","dirs","d","stat","asyncFilter","isDirectory","sources","rootComponentPath","toString","forEach","directives","errors","length","console","warn","rootComponentDirectives","filter","type","Error","rootComponentMap","set","chunkNameFromRootComponentDir","rootDirective","seenRootComponents","add","dynamicImportCalls","generateDynamicImportCode","finalSrc","err","Map","Set","Object","assign","dynamicImportsStr","chunkName","fullPath","split","slice","array","predicate","results","args","promiseBoolReflect","_","i","promise","arr","Array","prototype","concat"],"mappings":"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","file":"roots-chunk-loader.js","sourcesContent":["const { EOL } = require('os');\nconst { join, sep, dirname } = require('path');\nconst { promisify: pify } = require('util');\nconst directiveParser = require('@magento/directive-parser');\n\n/**\n * By design, this loader ignores the input content. The loader's sole purpose\n * is to dynamically generate import() expressions that tell webpack to create\n * chunks for each Root Component in a Magento theme\n */\nmodule.exports = async function rootComponentsChunkLoader(src) {\n    // Using `this.async()` because webpack's loader-runner lib has a super broken implementation\n    // of promise support\n    const cb = this.async();\n    const readFile = pify(this.fs.readFile.bind(this.fs));\n\n    try {\n        const rootsDirs = this.query.rootsDirs;\n\n        const readdir = pify(this.fs.readdir.bind(this.fs));\n        const dirEntries = flatten(\n            await Promise.all(\n                rootsDirs.map(async dir => {\n                    const dirs = await readdir(dir);\n                    return dirs.map(d => join(dir, d));\n                })\n            )\n        );\n\n        const stat = pify(this.fs.stat.bind(this.fs));\n        const dirs = await asyncFilter(dirEntries, async dir => {\n            return (await stat(dir)).isDirectory();\n        });\n\n        const sources = await Promise.all(\n            dirs.map(async dir => {\n                const rootComponentPath = join(dir, 'index.js'); // index.js should probably be configurable\n                // `this.loadModule` would typically be used here, but we can't use it due to a bug\n                // https://github.com/DrewML/webpack-loadmodule-bug. Instead, we do a read from webpack's MemoryFS.\n                // The `toString` is necessary because webpack's implementation of the `fs` API doesn't respect the\n                // encoding param, so the returned value is a Buffer. We don't actually _need_ `this.loadModule`,\n                // since we're not running the source through a full ECMAScript parser (so we don't need the file post-loaders)\n                const src = (await readFile(rootComponentPath)).toString();\n\n                return {\n                    rootComponentPath,\n                    src\n                };\n            })\n        );\n\n        sources.forEach(({ rootComponentPath, src }) => {\n            const { directives = [], errors } = directiveParser(src);\n            if (errors.length) {\n                console.warn(\n                    `Found PWA Studio Directive warning in ${rootComponentPath}`\n                );\n            }\n            const rootComponentDirectives = directives.filter(\n                d => d.type === 'RootComponent'\n            );\n\n            if (rootComponentDirectives.length > 1) {\n                console.warn(\n                    `Found more than 1 RootComponent Directive in ${rootComponentPath}. Only the first will be used`\n                );\n            }\n\n            // Because this error is reported from the loader for an entry point, webpack CLI shows\n            // the error happening within an entry point for the project, rather than the file\n            // that is missing a directive. TODO: Find a way to report the error for the correct module.\n            // Likely involves passing the error back to `MagentoRootComponentsPlugin`\n            if (!rootComponentDirectives.length) {\n                throw new Error(\n                    `Failed to create chunk for the following file, because it is missing a @RootComponent directive: ${rootComponentPath}`\n                );\n            }\n\n            rootComponentMap.set(\n                chunkNameFromRootComponentDir(dirname(rootComponentPath)),\n                { rootDirective: rootComponentDirectives[0], rootComponentPath }\n            );\n            // We already have the rootComponentPath in the rootComponenMap,\n            // but we need quick \"has\" validation later, and this won't force us\n            // to iterate a Map each time looking for a match\n            seenRootComponents.add(rootComponentPath);\n        });\n\n        const dynamicImportCalls = generateDynamicImportCode(dirs);\n        const finalSrc = `${src};${EOL}${EOL}${dynamicImportCalls}`;\n        // The entry point source in the graph will now contain the code authored\n        // in the entry point's file + a dynamic import() for each RootComponent\n        cb(null, finalSrc);\n    } catch (err) {\n        cb(err);\n    }\n};\n\nconst rootComponentMap = new Map();\nconst seenRootComponents = new Set();\nObject.assign(module.exports, { rootComponentMap, seenRootComponents });\n\n/**\n * @description webpack does not provide a programmatic API to create chunks for\n * n files. To get around this, we inject an (unused) function declaration in the entry point,\n * that wraps n number of import() calls. This will force webpack to create the chunks we need\n * for each RootComponent, but will allow UglifyJS to remove the wrapper function\n * (and the dynamic import calls) from the final bundle.\n * @param {string[]} dirs\n * @returns {string}\n */\nfunction generateDynamicImportCode(dirs) {\n    // TODO: Dig deeper for an API to programatically create chunks, because\n    // generating strings of JS is far from ideal\n    const dynamicImportsStr = dirs\n        .map(dir => {\n            const chunkName = chunkNameFromRootComponentDir(dir);\n            // Right now, Root Components are assumed to always be the `index.js` inside of a\n            // top-level dir in a specified root dir. We can change this to something else or\n            // make it configurable later\n            const fullPath = join(dir, 'index.js');\n            return `import(/* webpackChunkName: \"${chunkName}\" */ '${fullPath}')`;\n        })\n        .join('\\n\\n');\n\n    // Note: the __PURE__ comment ensures UglifyJS won't include\n    // the unnecessary function in the output\n    return `\n        /** Automatically injected by the webpack Magento Plugin **/\n        /*#__PURE__*/function this_function_will_be_removed_by_uglify() {\n            ${dynamicImportsStr}\n        }\n    `;\n}\n\n/**\n * @param {string} dir\n */\nfunction chunkNameFromRootComponentDir(dir) {\n    return dir.split(sep).slice(-1)[0];\n}\n\n/**\n * @template T\n * @param {T[]} array\n * @param {(item: T) => boolean} predicate\n * @returns {T[]}\n */\nasync function asyncFilter(array, predicate) {\n    const results = await Promise.all(\n        array.map((...args) => promiseBoolReflect(predicate(...args)))\n    );\n\n    return array.filter((_, i) => results[i]);\n}\n\n/**\n * @param {Promise<any>} promise\n * @returns {Promise<boolean>}\n */\nasync function promiseBoolReflect(promise) {\n    try {\n        return !!(await promise);\n    } catch (err) {\n        return false;\n    }\n}\n\nfunction flatten(arr) {\n    return Array.prototype.concat(...arr);\n}\n"]}