{"version":3,"sources":["../../src/util/options-validator.js"],"names":["lget","require","BLANK_DEFAULT","BuildpackValidationError","Error","constructor","name","callsite","validationErrors","bullet","message","map","key","requiredType","join","captureStackTrace","module","exports","simpleSchema","options","invalid","Object","entries","reduce","out","opt","push","length"],"mappings":";;AAAA;;;;AAIA,MAAMA,OAAOC,QAAQ,YAAR,CAAb;AACA,MAAMC,gBAAgB,EAAtB;;AAEA,MAAMC,wBAAN,SAAuCC,KAAvC,CAA6C;AACzCC,gBAAYC,IAAZ,EAAkBC,QAAlB,EAA4BC,gBAA5B,EAA8C;AAC1C;;AAEA,cAAMC,SAAS,QAAf;AACA,aAAKH,IAAL,GAAY,0BAAZ;AACA,aAAKI,OAAL,GACK,GAAEJ,IAAK,kCAAR,GACC,GAAEC,QAAS,2EAA0EE,MAAO,EAD7F,GAEAD,iBACKG,GADL,CAEQ,CAAC,CAACC,GAAD,EAAMC,YAAN,CAAD,KACK,GAAED,GAAI,oBAAmBC,YAAa,EAHnD,EAKKC,IALL,CAKUL,MALV,CAHJ;AASA,aAAKD,gBAAL,GAAwBA,gBAAxB;;AAEAJ,cAAMW,iBAAN,CAAwB,IAAxB,EAA8B,KAAKV,WAAnC;AACH;AAlBwC;;AAqB7CW,OAAOC,OAAP,GAAiB,CAACX,IAAD,EAAOY,YAAP,KAAwB,CAACX,QAAD,EAAWY,OAAX,KAAuB;AAC5D,UAAMC,UAAUC,OAAOC,OAAP,CAAeJ,YAAf,EAA6BK,MAA7B,CACZ,CAACC,GAAD,EAAM,CAACZ,GAAD,EAAMC,YAAN,CAAN,KAA8B;AAC1B,cAAMY,MAAMzB,KAAKmB,OAAL,EAAcP,GAAd,EAAmBV,aAAnB,CAAZ;AACA,YAAIuB,QAAQvB,aAAR,IAAyB,OAAOuB,GAAP,KAAeZ,YAA5C,EAA0D;AACtDW,gBAAIE,IAAJ,CAAS,CAACd,GAAD,EAAMC,YAAN,CAAT;AACH;AACD,eAAOW,GAAP;AACH,KAPW,EAQZ,EARY,CAAhB;AAUA,QAAIJ,QAAQO,MAAR,GAAiB,CAArB,EAAwB;AACpB,cAAM,IAAIxB,wBAAJ,CAA6BG,IAA7B,EAAmCC,QAAnC,EAA6Ca,OAA7C,CAAN;AACH;AACJ,CAdD","file":"options-validator.js","sourcesContent":["/**\n * Quick and dirty substitute for a proper schematized validator like `joi`.\n * TODO [good first issue]: Replace with a more standard object shape validator.\n */\nconst lget = require('lodash.get');\nconst BLANK_DEFAULT = {};\n\nclass BuildpackValidationError extends Error {\n    constructor(name, callsite, validationErrors) {\n        super();\n\n        const bullet = '\\n\\t- ';\n        this.name = 'BuildpackValidationError';\n        this.message =\n            `${name}: Invalid configuration object. ` +\n            `${callsite} was called with a configuration object that has the following problems:${bullet}` +\n            validationErrors\n                .map(\n                    ([key, requiredType]) =>\n                        `${key} must be of type ${requiredType}`\n                )\n                .join(bullet);\n        this.validationErrors = validationErrors;\n\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n\nmodule.exports = (name, simpleSchema) => (callsite, options) => {\n    const invalid = Object.entries(simpleSchema).reduce(\n        (out, [key, requiredType]) => {\n            const opt = lget(options, key, BLANK_DEFAULT);\n            if (opt === BLANK_DEFAULT || typeof opt !== requiredType) {\n                out.push([key, requiredType]);\n            }\n            return out;\n        },\n        []\n    );\n    if (invalid.length > 0) {\n        throw new BuildpackValidationError(name, callsite, invalid);\n    }\n};\n"]}