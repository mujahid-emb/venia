{"version":3,"sources":["../../src/Router/fetchRootComponent.js"],"names":["webpackInterop","fetchRootComponent","chunkID","moduleID","loadChunk","then","modNamespace","require","Error","default"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;AAEA;;;;;;AAMA,eAAe,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,QAArC,EAA+C;AAC1D,WAAOH,eAAeI,SAAf,CAAyBF,OAAzB,EAAkCG,IAAlC,CAAuC,MAAM;AAChD,cAAMC,eAAeN,eAAeO,OAAf,CAAuBJ,QAAvB,CAArB;AACA,YAAI,CAACG,YAAL,EAAmB;AACf,kBAAM,IAAIE,KAAJ,CACD,oBAAmBN,OAAQ,mBAAkBC,QAAS,6DADrD,CAAN;AAGH;;AAED,YAAI,OAAOG,aAAaG,OAApB,KAAgC,UAApC,EAAgD;AAC5C,kBAAM,IAAID,KAAJ,CACD,YAAWL,QAAS,aAAYD,OAAQ,mDADvC,CAAN;AAGH;;AAED,eAAOI,aAAaG,OAApB;AACH,KAfM,CAAP;AAgBH","file":"fetchRootComponent.js","sourcesContent":["import webpackInterop from './webpackInterop';\n\n/**\n * @description Uses the webpack runtime to async load a chunk, and then returns\n * the default export for the module specified with moduleID\n * @param {number} chunkID\n * @param {number} moduleID\n */\nexport default function fetchRootComponent(chunkID, moduleID) {\n    return webpackInterop.loadChunk(chunkID).then(() => {\n        const modNamespace = webpackInterop.require(moduleID);\n        if (!modNamespace) {\n            throw new Error(\n                `Expected chunkID ${chunkID} to have module ${moduleID}. Cannot render this route without a matching RootComponent`\n            );\n        }\n\n        if (typeof modNamespace.default !== 'function') {\n            throw new Error(\n                `moduleID ${moduleID} in chunk ${chunkID} was missing a default export for a RootComponent`\n            );\n        }\n\n        return modNamespace.default;\n    });\n}\n"]}