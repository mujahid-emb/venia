{"version":3,"sources":["../../src/List/item.js"],"names":["Component","createElement","PropTypes","fromRenderProp","Item","children","item","props","isString","render","classes","hasFocus","isSelected","restProps","customProps","Root","Object","keys","root","propTypes","shape","string","bool","any","isRequired","oneOfType","func","defaultProps"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;;AAmBzB,QAAIK,QAAJ,GAAe;AACX,cAAM,EAAEC,IAAF,KAAW,KAAKC,KAAtB;AACA,cAAMC,WAAW,OAAOF,IAAP,KAAgB,QAAjC;;AAEA,eAAOE,WAAWF,IAAX,GAAkB,IAAzB;AACH;;AAEDG,aAAS;AACL,uBAOI,KAAKF,KAPT;AAAA,cAAM;AACFG,mBADE;AAEFC,oBAFE;AAGFC,sBAHE;AAIFN,gBAJE;AAKFG;AALE,SAAN;AAAA,cAMOI,SANP;AAQA,cAAMC,cAAc,EAAEJ,OAAF,EAAWC,QAAX,EAAqBC,UAArB,EAAiCN,IAAjC,EAApB;AACA,cAAMS,OAAOZ,eAAeM,MAAf,EAAuBO,OAAOC,IAAP,CAAYH,WAAZ,CAAvB,CAAb;;AAEA,eACI;AAAC,gBAAD;AAAA,uBAAM,WAAWJ,QAAQQ,IAAzB,IAAmCJ,WAAnC,EAAoDD,SAApD;AACK,iBAAKR;AADV,SADJ;AAKH;AA3CwB;;AAAvBD,I,CACKe,S,GAAY;AACfT,aAASR,UAAUkB,KAAV,CAAgB;AACrBF,cAAMhB,UAAUmB;AADK,KAAhB,CADM;AAIfV,cAAUT,UAAUoB,IAJL;AAKfV,gBAAYV,UAAUoB,IALP;AAMfhB,UAAMJ,UAAUqB,GAAV,CAAcC,UANL;AAOff,YAAQP,UAAUuB,SAAV,CAAoB,CAACvB,UAAUwB,IAAX,EAAiBxB,UAAUmB,MAA3B,CAApB,EACHG;AARU,C;AADjBpB,I,CAYKuB,Y,GAAe;AAClBjB,aAAS,EADS;AAElBC,cAAU,KAFQ;AAGlBC,gBAAY,KAHM;AAIlBH,YAAQ;AAJU,C;AAkC1B,eAAeL,IAAf","file":"item.js","sourcesContent":["import { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fromRenderProp from '../util/fromRenderProp';\n\nclass Item extends Component {\n    static propTypes = {\n        classes: PropTypes.shape({\n            root: PropTypes.string\n        }),\n        hasFocus: PropTypes.bool,\n        isSelected: PropTypes.bool,\n        item: PropTypes.any.isRequired,\n        render: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n            .isRequired\n    };\n\n    static defaultProps = {\n        classes: {},\n        hasFocus: false,\n        isSelected: false,\n        render: 'div'\n    };\n\n    get children() {\n        const { item } = this.props;\n        const isString = typeof item === 'string';\n\n        return isString ? item : null;\n    }\n\n    render() {\n        const {\n            classes,\n            hasFocus,\n            isSelected,\n            item,\n            render,\n            ...restProps\n        } = this.props;\n        const customProps = { classes, hasFocus, isSelected, item };\n        const Root = fromRenderProp(render, Object.keys(customProps));\n\n        return (\n            <Root className={classes.root} {...customProps} {...restProps}>\n                {this.children}\n            </Root>\n        );\n    }\n}\n\nexport default Item;\n"]}