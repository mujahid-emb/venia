import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import { Component, createElement } from 'react';
import PropTypes from 'prop-types';

import fromRenderProp from '../util/fromRenderProp';

class Item extends Component {

    get children() {
        const { item } = this.props;
        const isString = typeof item === 'string';

        return isString ? item : null;
    }

    render() {
        const _props = this.props,
              {
            classes,
            hasFocus,
            isSelected,
            item,
            render
        } = _props,
              restProps = _objectWithoutProperties(_props, ['classes', 'hasFocus', 'isSelected', 'item', 'render']);
        const customProps = { classes, hasFocus, isSelected, item };
        const Root = fromRenderProp(render, Object.keys(customProps));

        return createElement(
            Root,
            _extends({ className: classes.root }, customProps, restProps),
            this.children
        );
    }
}

Item.propTypes = {
    classes: PropTypes.shape({
        root: PropTypes.string
    }),
    hasFocus: PropTypes.bool,
    isSelected: PropTypes.bool,
    item: PropTypes.any.isRequired,
    render: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired
};
Item.defaultProps = {
    classes: {},
    hasFocus: false,
    isSelected: false,
    render: 'div'
};
export default Item;
//# sourceMappingURL=item.js.map