{"version":3,"sources":["../../../src/RestApi/Magento2/M2ApiResponseError.js"],"names":["M2ApiResponseError","Error","constructor","method","resourceUrl","response","bodyText","args","body","JSON","parse","message","trace","rest","addl","Object","entries","length","stringify","e","status","statusText","captureStackTrace"],"mappings":";AAAA,eAAe,MAAMA,kBAAN,SAAiCC,KAAjC,CAAuC;AAClDC,gBAAY,EAAEC,MAAF,EAAUC,WAAV,EAAuBC,QAAvB,EAAiCC,QAAjC,EAAZ,EAAyD,GAAGC,IAA5D,EAAkE;AAC9D,YAAIC,OAAQ,EAAZ;AACA,YAAI;AACA,gCAAoCC,KAAKC,KAAL,CAAWJ,QAAX,CAApC;AAAA,kBAAM,EAAEK,OAAF,EAAWC,KAAX,EAAN;AAAA,kBAA2BC,IAA3B;AACA,gBAAIF,OAAJ,EAAa;AACTH,wBAAS,iBAAgBG,OAAQ,IAAjC;AACH;AACD,kBAAMG,OAAOC,OAAOC,OAAP,CAAeH,IAAf,CAAb;AACA,gBAAIC,KAAKG,MAAL,GAAc,CAAlB,EAAqB;AACjBT,wBAAS,yBAAwBC,KAAKS,SAAL,CAC7BL,IAD6B,EAE7B,IAF6B,EAG7B,CAH6B,CAI/B,MAJF;AAKH;AACD,gBAAID,KAAJ,EAAW;AACPJ,wBAAS,gCAA+BI,KAAM,EAA9C;AACH;AACDJ,oBAAQ,IAAR;AACH,SAjBD,CAiBE,OAAOW,CAAP,EAAU;AACRX,mBAAOF,QAAP;AACH;AACD,cACK,GAAEH,MAAO,IAAGC,WAAY,cAAaC,SAASe,MAAO,IAClDf,SAASgB,UACZ,SAAQb,IAAK,EAHlB,EAII,GAAGD,IAJP;AAMA,YAAIN,MAAMqB,iBAAV,EAA6B;AACzBrB,kBAAMqB,iBAAN,CAAwB,IAAxB,EAA8BtB,kBAA9B;AACH;AACD,aAAKK,QAAL,GAAgBA,QAAhB;AACA,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACH;AAnCiD","file":"M2ApiResponseError.js","sourcesContent":["export default class M2ApiResponseError extends Error {\n    constructor({ method, resourceUrl, response, bodyText }, ...args) {\n        let body = ``;\n        try {\n            const { message, trace, ...rest } = JSON.parse(bodyText);\n            if (message) {\n                body += `Message:\\n\\n  ${message}\\n`;\n            }\n            const addl = Object.entries(rest);\n            if (addl.length > 0) {\n                body += `\\nAdditional info:\\n\\n${JSON.stringify(\n                    rest,\n                    null,\n                    4\n                )}\\n\\n`;\n            }\n            if (trace) {\n                body += `Magento PHP stack trace: \\n\\n${trace}`;\n            }\n            body += '\\n';\n        } catch (e) {\n            body = bodyText;\n        }\n        super(\n            `${method} ${resourceUrl} responded ${response.status} ${\n                response.statusText\n            }: \\n\\n${body}`,\n            ...args\n        );\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, M2ApiResponseError);\n        }\n        this.response = response;\n        this.method = method;\n        this.resourceUrl = resourceUrl;\n    }\n}\n"]}