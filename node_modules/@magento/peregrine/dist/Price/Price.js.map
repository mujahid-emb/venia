{"version":3,"sources":["../../src/Price/Price.js"],"names":["createElement","PureComponent","Fragment","number","string","shape","Price","render","value","currencyCode","classes","props","parts","Intl","NumberFormat","undefined","style","currency","formatToParts","children","map","part","i","partClass","type","key","propTypes","isRequired","integer","decimal","fraction","defaultProps"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,YAAtC;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,aAApB,CAAkC;;AAgB7CM,aAAS;AACL,cAAM,EAAEC,KAAF,EAASC,YAAT,EAAuBC,OAAvB,KAAmC,KAAKC,KAA9C;;AAEA,cAAMC,QAAQC,KAAKC,YAAL,CAAkBC,SAAlB,EAA6B;AACvCC,mBAAO,UADgC;AAEvCC,sBAAUR;AAF6B,SAA7B,EAGXS,aAHW,CAGGV,KAHH,CAAd;;AAKA,cAAMW,WAAWP,MAAMQ,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpC,kBAAMC,YAAYb,QAAQW,KAAKG,IAAb,CAAlB;AACA,kBAAMC,MAAO,GAAEH,CAAE,IAAGD,KAAKb,KAAM,EAA/B;;AAEA,mBACI;AAAA;AAAA,kBAAM,KAAKiB,GAAX,EAAgB,WAAWF,SAA3B;AACKF,qBAAKb;AADV,aADJ;AAKH,SATgB,CAAjB;;AAWA,eAAO;AAAC,oBAAD;AAAA;AAAWW;AAAX,SAAP;AACH;AApC4C;AAA5Bb,K,CACVoB,S,GAAY;AACflB,WAAOL,OAAOwB,UADC;AAEflB,kBAAcL,OAAOuB,UAFN;AAGfjB,aAASL,MAAM;AACXY,kBAAUb,MADC;AAEXwB,iBAASxB,MAFE;AAGXyB,iBAASzB,MAHE;AAIX0B,kBAAU1B;AAJC,KAAN;AAHM,C;AADFE,K,CAYVyB,Y,GAAe;AAClBrB,aAAS;AADS,C","file":"Price.js","sourcesContent":["import { createElement, PureComponent, Fragment } from 'react';\nimport { number, string, shape } from 'prop-types';\n\nexport default class Price extends PureComponent {\n    static propTypes = {\n        value: number.isRequired,\n        currencyCode: string.isRequired,\n        classes: shape({\n            currency: string,\n            integer: string,\n            decimal: string,\n            fraction: string\n        })\n    };\n\n    static defaultProps = {\n        classes: {}\n    };\n\n    render() {\n        const { value, currencyCode, classes } = this.props;\n\n        const parts = Intl.NumberFormat(undefined, {\n            style: 'currency',\n            currency: currencyCode\n        }).formatToParts(value);\n\n        const children = parts.map((part, i) => {\n            const partClass = classes[part.type];\n            const key = `${i}-${part.value}`;\n\n            return (\n                <span key={key} className={partClass}>\n                    {part.value}\n                </span>\n            );\n        });\n\n        return <Fragment>{children}</Fragment>;\n    }\n}\n"]}