{"version":3,"sources":["../../../src/store/middleware/log.js"],"names":["log","store","next","action","result","console","groupCollapsed","type","group","payload","groupEnd","getState"],"mappings":"AAAA;;;;;;;AAOA,MAAMA,MAAMC,SAASC,QAAQC,UAAU;AACnC,UAAMC,SAASF,KAAKC,MAAL,CAAf;;AAEAE,YAAQC,cAAR,CAAuBH,OAAOI,IAA9B;AACAF,YAAQG,KAAR,CAAc,SAAd;AACAH,YAAQL,GAAR,CAAYG,OAAOM,OAAnB;AACAJ,YAAQK,QAAR;AACAL,YAAQG,KAAR,CAAc,YAAd;AACAH,YAAQL,GAAR,CAAYC,MAAMU,QAAN,EAAZ;AACAN,YAAQK,QAAR;AACAL,YAAQK,QAAR;;AAEA,WAAON,MAAP;AACH,CAbD;;AAeA,eAAeJ,GAAf","file":"log.js","sourcesContent":["/**\n * Log actions and state to the browser console.\n * This function adheres to Redux's middleware pattern.\n *\n * @param {Store} store The store to augment.\n * @returns {Function}\n */\nconst log = store => next => action => {\n    const result = next(action);\n\n    console.groupCollapsed(action.type);\n    console.group('payload');\n    console.log(action.payload);\n    console.groupEnd();\n    console.group('next state');\n    console.log(store.getState());\n    console.groupEnd();\n    console.groupEnd();\n\n    return result;\n};\n\nexport default log;\n"]}